(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,n){},16:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),s=n(8),o=n.n(s),c=(n(15),n(1)),i=n(2),l=n(4),d=n(3),p=n(5),u=n(6),h=function(e){function t(){var e,n;Object(c.a)(this,t);for(var a=arguments.length,r=new Array(a),s=0;s<a;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).state={},n.selectCard=function(){n.props.selectCardFn(n.props.objKey)},n.getDisplayValue=function(e){var t=e+1;if(t>1&&t<=10)return t.toString();switch(t){case 1:return"A";case 11:return"J";case 12:return"Q";case 13:return"K";default:return"E"}},n}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return r.a.createElement("div",{onClick:this.selectCard,style:{boxSizing:"border-box",border:this.props.selected?"2px solid red":"1px solid grey",textAlign:"left",borderRadius:10,height:this.props.height,width:this.props.width,padding:5,color:"\u2665"===this.props.suit||"\u2666"===this.props.suit?"red":"black",backgroundColor:"white",marginTop:this.props.verticalMargin,position:"relative",zIndex:this.props.dispIndex||0}},this.props.suit,this.getDisplayValue(this.props.rank))}}]),t}(a.Component),m=function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{style:{border:"1px solid grey",width:this.props.width,height:this.props.height,backgroundColor:"cream",margin:this.props.cardMargins/2},onClick:function(){null===e.props.card&&e.props.selectEmptySquareFn(e.props.location)}},null!==this.props.card?r.a.createElement(h,{suit:this.props.card.suit,rank:this.props.card.rank,height:this.props.height,width:this.props.width,selected:this.props.card.selected,selectCardFn:this.props.selectCardFn,objKey:this.props.card.rank+this.props.card.suit}):null)}}]),t}(a.Component),f=function(e){function t(){var e,n;Object(c.a)(this,t);for(var a=arguments.length,r=new Array(a),s=0;s<a;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).state={},n}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{style:{border:"1px solid grey",width:this.props.width,height:this.props.height,backgroundColor:"cream",margin:this.props.cardMargins/2},onClick:function(){e.props.cards.length||e.props.selectEmptySquareFn(e.props.location)}},this.props.cards&&this.props.cards.length?r.a.createElement(h,{suit:this.props.cards[this.props.cards.length-1].suit,rank:this.props.cards[this.props.cards.length-1].rank,height:this.props.height,width:this.props.width,selected:this.props.cards[this.props.cards.length-1].selected,selectCardFn:this.props.selectCardFn,key:this.props.cards[this.props.cards.length-1].rank+this.props.cards[this.props.cards.length-1].suit,objKey:this.props.cards[this.props.cards.length-1].rank+this.props.cards[this.props.cards.length-1].suit}):null)}}]),t}(a.Component),y=function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){var e=this,t=-this.props.cardHeight+Math.round(.33*this.props.cardHeight);return r.a.createElement("div",{style:{paddingTop:-t,paddingLeft:this.props.cardMargins/2,paddingRight:this.props.cardMargins/2,border:"1px solid grey",width:this.props.cardWidth,minHeight:this.props.cardHeight},onClick:function(){e.props.cards.length||e.props.selectEmptySquareFn(e.props.location)}},this.props.cards&&this.props.cards.length?this.props.cards.map(function(n,a){return r.a.createElement(h,{rank:n.rank,suit:n.suit,height:e.props.cardHeight,width:e.props.cardWidth,verticalMargin:t,selectCardFn:e.props.selectCardFn,selected:n.selected,key:n.rank+n.suit,location:e.props.location,index:a,objKey:n.rank+n.suit,maxIndex:e.props.cards.length-1,dispIndex:a})}):null)}}]),t}(a.Component),g=["\u2663","\u2666","\u2665","\u2660"],C=function(e){function t(){var e,n;Object(c.a)(this,t);for(var a=arguments.length,r=new Array(a),s=0;s<a;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).state={cards:{},gameInProgress:!1,cascades:[[],[],[],[],[],[],[],[]],freeCells:[null,null,null,null],foundations:[[],[],[],[]],selectedKey:null,width:0,height:0},n.componentDidMount=function(){n.updateWindowDimensions(),window.addEventListener("resize",n.updateWindowDimensions)},n.componentWillUnmount=function(){window.removeEventListener("resize",n.updateWindowDimensions)},n.updateWindowDimensions=function(){n.setState({width:window.innerWidth,height:window.innerHeight})},n.generateCards=function(){var e={};g.forEach(function(t){for(var n=0;n<=12;n++)e[n+t]={suit:t,rank:n,location:null,selected:!1,objKey:n+t}}),n.setState({cards:e},function(){n.shuffleCards()})},n.shuffleCards=function(){var e=[];g.forEach(function(t){for(var n=0;n<=12;n++)e.push({suit:t,rank:n})});var t=e.map(function(e){return[Math.random(),e]}).sort(function(e,t){return e[0]-t[0]}).map(function(e){return e[1]}),a=Object(u.a)({},n.state.cards);t.forEach(function(e,t){var n=t%8,r=Math.floor(t/8),s=e.rank+e.suit;a[s].location="cascade",a[s].column=n,a[s].position=r}),n.setState({cards:a},function(){n.displayCards()})},n.cardsCanStack=function(e,t,a){var r=n.state.cards[e],s=n.state.cards[t];return"cascade"===a?s.rank-1===r.rank&&n.getCardColor(s)!==n.getCardColor(r):"foundation"===a?s.suit===r.suit&&s.rank+1===r.rank:(console.error("GameArea.jsx -> cardsCanStack function: incorrect stack type specified"),!1)},n.displayCards=function(){var e=Object(u.a)({},n.state.cards),t=[[],[],[],[],[],[],[],[]],a=[[],[],[],[]],r=[null,null,null,null];for(var s in e)"cascade"===e[s].location?t[e[s].column][e[s].position]=e[s]:"foundation"===e[s].location?a[e[s].column][e[s].position]=e[s]:"freeCell"===e[s].location&&(r[e[s].column]=e[s]);n.setState({cards:e,cascades:t,foundations:a,freeCells:r,selectedKey:null})},n.selectEmptySquareFn=function(e){var t=n.state.selectedKey;if(t){var a=e.match(/(\w+)(\d+)/),r=a[1],s=a[2];"foundation"===r?n.checkToStackCardOnFoundation({cardKey:t,column:s}):"freeCell"===r?n.checkToMoveToFreeCell({cardKey:t,column:s}):"cascade"===r&&n.tryToMoveToEmptyCascade({cardKey:t,column:s})}},n.selectCardFn=function(e){var t=Object(u.a)({},n.state.cards);if(n.state.selectedKey&&n.state.selectedKey===e)return t[e].selected=!1,void n.setState({cards:t,selectedKey:null});if(!n.state.selectedKey)return t[e].selected=!0,void n.setState({cards:t,selectedKey:e});var a=n.state.cards[e];"foundation"!==a.location?"cascade"===a.location&&n.tryToMoveToCascade({cardKey:n.state.selectedKey,column:a.column}):n.checkToStackCardOnFoundation({cardKey:n.state.selectedKey,column:a.column})},n.moveCard=function(e){var t=e.cardKey,a=e.location,r=e.column,s=e.position,o=Object(u.a)({},n.state.cards),c=o[t];c.location=a,c.column=r,c.position=s,c.selected=!1,o[n.state.selectedKey].selected=null,n.setState({cards:o,selectedKey:null},function(){n.displayCards()})},n.checkToMoveToFreeCell=function(e){var t=e.cardKey,a=e.column;n.state.freeCells[a]?console.error("Attempted to move to non-empty freeCell which should not be possible."):n.moveCard({cardKey:t,location:"freeCell",column:a,position:0})},n.checkToStackCardOnFoundation=function(e){var t=e.cardKey,a=e.column,r=Object(u.a)({},n.state.cards),s=r[t];if(0===n.state.foundations[a].length){if(0!==s.rank)return!1}else{var o=n.state.foundations[a].length,c=n.state.foundations[a][o-1];if(s.suit!==c.suit)return!1;if(s.rank-1!==c.rank)return!1}n.moveCard({cardKey:t,location:"foundation",column:a,position:r[t].rank})},n.tryToMoveToEmptyCascade=function(e){var t=e.cardKey,a=e.column;n.state.cascades[a].length>0?console.error("Attempted to move to non-empty cascade, which should not be possible"):n.moveCard({cardKey:t,location:"cascade",column:a,position:0})},n.tryToMoveToCascade=function(e){var t=e.cardKey,a=e.column,r=Object(u.a)({},n.state.cards)[t],s=n.state.cascades[a].length,o=n.state.cascades[a][s-1];n.getCardColor(r)!==n.getCardColor(o)&&r.rank+1===o.rank&&n.moveCard({cardKey:t,location:"cascade",column:a,position:o.position+1})},n.getCardColor=function(e){return"\u2666"===e.suit||"\u2665"===e.suit?"red":"black"},n}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){var e=this,t=Math.min(Math.round(this.state.width/12),Math.round(this.state.height/12)),n=Math.round(1.4*t),a=Math.round(.02*this.state.width);return r.a.createElement("div",{style:{textAlign:"center"}},r.a.createElement("button",{style:{marginLeft:20},onClick:this.generateCards},"New Game"),r.a.createElement("span",{style:{fontSize:"0.7em"}}," ","(Warning - this will end your current game.)"),r.a.createElement("div",{style:{display:"flex",justifyContent:"center"}},r.a.createElement("div",{style:{margin:a}},r.a.createElement("h4",{style:{textAlign:"center"}},"Foundations"),r.a.createElement("div",{style:{display:"flex"}},this.state.foundations.map(function(s,o){return r.a.createElement(f,{height:n,width:t,key:"foundation"+o,location:"foundation"+o,selectCardFn:e.selectCardFn,selectEmptySquareFn:e.selectEmptySquareFn,cards:s,cardMargins:a})}))),r.a.createElement("div",{style:{margin:a}},r.a.createElement("h4",{style:{textAlign:"center"}},"FreeCells"),r.a.createElement("div",{style:{display:"flex"}},this.state.freeCells.map(function(s,o){return r.a.createElement(m,{width:t,height:n,key:"freeCell"+o,location:"freeCell"+o,selectCardFn:e.selectCardFn,selectEmptySquareFn:e.selectEmptySquareFn,card:s,cardMargins:a})})))),r.a.createElement("div",{style:{display:"flex",justifyContent:"center"}},this.state.cascades.map(function(s,o){return r.a.createElement(y,{className:"Cascade",cards:s,cardWidth:t,cardHeight:n,selectCardFn:e.selectCardFn,selectEmptySquareFn:e.selectEmptySquareFn,key:"cascade"+o,location:"cascade"+o,cardMargins:a})})))}}]),t}(a.Component);function v(){return r.a.createElement("div",{style:{marginTop:25,textAlign:"center"}},r.a.createElement("p",{style:{fontSize:"0.6em"}},"Note: Cheating is currently possible (selecting underlying cells within cascades) to allow easier testing. It will be disabled shortly."),r.a.createElement("a",{href:"https://github.com/scotteratigan/reactcell/",target:"_blank",rel:"noopener noreferrer"},"Source Code")," ","|"," ",r.a.createElement("a",{href:"https://scotteratigan.github.io/",target:"_blank",rel:"noopener noreferrer"},"My Portfolio")," ","|"," ",r.a.createElement("a",{href:"https://www.linkedin.com/in/scotteratigan/",target:"_blank",rel:"noopener noreferrer"},"LinkedIn"))}var b=function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{style:{marginTop:20,textAlign:"center"}},r.a.createElement("h1",null,r.a.createElement("em",null,"React"),"Cell"),r.a.createElement("h4",null,"A FreeCell clone by Scott Ratigan")),r.a.createElement(C,null),r.a.createElement(v,null))}}]),t}(a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(b,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},9:function(e,t,n){e.exports=n(16)}},[[9,1,2]]]);
//# sourceMappingURL=main.74a328c3.chunk.js.map